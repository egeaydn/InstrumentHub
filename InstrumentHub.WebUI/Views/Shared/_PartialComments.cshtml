@using InstrumentHub.Entites
@using System.Security.Claims
@model List<Comment>

<link href="~/css/comment.css" rel="stylesheet" />

@{
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var usernames = ViewBag.Usernames as Dictionary<string, string> ?? new Dictionary<string, string>();
}

@if (User.Identity.IsAuthenticated)
{
    <div class="comment-input-container">
        <div class="comment-input-wrapper d-flex align-items-center gap-2">
            <input type="text" id="new_comment_text" class="form-control comment-input flex-grow-1" placeholder="Your Comments..." />

            <select id="new_comment_rating" class="form-select w-auto p-1">
                <option value="1">⭐</option>
                <option value="2">⭐⭐</option>
                <option value="3">⭐⭐⭐</option>
                <option value="4">⭐⭐⭐⭐</option>
                <option value="5">⭐⭐⭐⭐⭐</option>
            </select>

            <button type="button" class="btn btn-success submit-comment-btn" onclick="doComment('new_clicked', -1)">
                <span class="fas fa-share"></span> Submit
            </button>
        </div>
    </div>
}

@if (Model.Count > 0)
{
    @foreach (var comment in Model)
    {
        <div class="comment-card">
            <div class="comment-card-body">
                <h6 class="comment-author">
                    <span>@(usernames.ContainsKey(comment.UserId) ? usernames[comment.UserId] : "Anonim")</span>
                    <small class="comment-date">
                        <i>@comment.CommentCreateOn.ToString("ddd, dd MMMM yyyy")</i>
                    </small>
                </h6>
                <div class="comment-text" id="comment_text_@comment.Id">
                    @comment.CommentText
                </div>

                <div class="comment-rating">
                    <span>Puan: @comment.Rating ⭐</span>
                </div>

                @if (User.Identity.IsAuthenticated && userId == comment.UserId)
                {
                    <div class="comment-actions">
                        <button type="button" class="btn btn-danger delete-comment-btn" onclick="doComment('delete_clicked', @comment.Id)">
                            <span class="fas fa-trash"></span>
                        </button>
                    </div>
                }
            </div>
        </div>
    }
}
else
{
    <div class="alert alert-warning no-comments-warning">
        Yorum Yapılmamıştır. İlk yorumu yapmak ister misin?
    </div>
}

<script>
    function doComment(action, commentId) {
        var text = "";
        var rating = 0;

        if (action === "new_clicked") {
            text = $("#new_comment_text").val().trim();
            rating = parseInt($("#new_comment_rating").val()) || 0;
        }

        if (!text && action !== "delete_clicked") {
            alert("Lütfen bir yorum girin.");
            return;
        }

        $.ajax({
            url: "/Comment/" + (action === "new_clicked" ? "Create" : "Delete"),
            type: "POST",
            data: {
                text: text,
                productId: productId,
                id: commentId,
                rating: rating
            },
            success: function (response) {
                if (response.result) {
                    location.reload();
                } else {
                    alert("İşlem başarısız.");
                }
            },
            error: function () {
                alert("Sunucu hatası!");
            }
        });
    }
</script>
